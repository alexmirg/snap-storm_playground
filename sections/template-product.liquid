<link rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js" defer></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

<script src="{{ 'product-model.js' |  asset_url }}" defer></script>

<style>
  .swiper-button-prev,
  .swiper-button-next {
    color: #000;
    top: auto !important;
    height: 20px;
  }
  .swiper-button-prev:after,
  .swiper-button-next:after {
    font-size: 20px;
  }
  .swiper-pagination-bullets {
    bottom: 0 !important;
  }
  .swiper-pagination-bullet-active {
    background: #000;
  }
  .product--information {
    height: fit-content;
  }
</style>
<div x-data="{ productModalOpen: false }">
  <div class="max-w-6xl mx-auto my-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
      <div class="product--medias">
        <div class="hidden md:block">
          {% for media in product.media %}
            <div class="h-100 overflow-hidden p-2">
              {% render 'product-media', media: media %}
            </div>
          {% endfor %}
        </div>
        <div class="md:hidden">
          <div class="swiper">
            <div class="swiper-wrapper">
              {% for media in product.media %}
                <div class="swiper-slide">
                  <div class="h-[100vw] overflow-hidden p-2 pb-8">
                    {% render 'product-media', media: media %}
                  </div>
                </div>
              {% endfor %}
            </div>
            <div class="swiper-pagination"></div>
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
          </div>
        </div>
      </div>
      <div class="product--information sticky top-5 p-2">
        {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
          <input type="hidden" name="id" value="{{ selected_variant.id }}">
          {% for block in section.blocks %}
            {% case block.type %}
              {% when 'vendor' %}
                <div class="my-3">
                  <span class="text-xs text-gray-500">
                    {{ product.vendor }}
                  </span>
                </div>
              {% when 'title' %}
                <div class="my-3">
                  <h1 class="text-3xl text-gray-900">
                    {{ product.title }}
                  </h1>
                </div>
              {% when 'price' %}
                <div class="my-3" id="price-{{ section.id }}">
                  <span class="text-base text-gray-500 line-through">
                    {{- selected_variant.compare_at_price | money -}}
                  </span>
                  <span class="text-lg text-gray-900">{{ selected_variant.price | money }}</span>
                  {% if selected_variant.price < selected_variant.compare_at_price %}
                    <span class="px-5 py-1 text-small font-bold bg-red-500 rounded-full text-white mx-4"> Sale </span>
                  {% endif %}
                </div>
              {% when 'variant_selector' %}
                <div class="my-3">
                  {% unless product.has_only_default_variant %}
                    <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                      {% for option in product.options_with_values %}
                        <div class="mb-6">
                          {% assign variant_id = forloop.index0 %}
                          <label for="Option-{{section.id}}-{{forloop.index0}}" class="block my-2">
                            {{ option.name -}}
                          </label>
                          {% case option.name %}
                            {% when 'Case color' %}
                              <fieldset
                                class="variations-group flex my-2"
                                id="Option-{{section.id}}-{{forloop.index0}}"
                              >
                                {% for value in option.values %}
                                  <label
                                    for="Option-{{section.id}}-{{variant_id}}-{{forloop.index}}"
                                    class="
                                        flex flex-col px-2 items-center
                                      {% if option.selected_value == value %}
                                        font-bold
                                      {% endif %}
                                    "
                                  >
                                    <input
                                      type="radio"
                                      name="options[{{option.name |  escape }}]"
                                      id="Option-{{section.id}}-{{variant_id}}-{{forloop.index}}"
                                      value="{{ value }}"
                                      class="hidden"
                                      {% if option.selected_value == value %}
                                        checked
                                      {% endif %}
                                    >
                                    <span
                                      class="inline-block w-8 h-8 rounded-full border-2 cursor-pointer"
                                      style="background-color: {{ value }}"
                                    ></span>
                                    <span>
                                      {{ value }}
                                    </span>
                                  </label>
                                {% endfor %}
                              </fieldset>
                            {% else %}
                              <select
                                id="Option-{{section.id}}-{{forloop.index0}}"
                                name="options[{{option.name |  escape }}]"
                                class="w-full border py-3 px-3"
                              >
                                {% for value in option.values %}
                                  <option
                                    {% if option.selected_value == value %}
                                      selected="selected"
                                    {% endif %}
                                    value="{{ value }}"
                                  >
                                    {{ value }}
                                  </option>
                                {% endfor %}
                              </select>
                          {% endcase %}
                          <script type="application/json">
                            {{
                              product.variants | json
                            }}
                          </script>
                        </div>
                      {% endfor %}
                    </variant-selector>
                  {% endunless %}
                </div>
              {% when 'quantity' %}
                <div class="my-3">
                  <label for="Quantity-{{section.id}}" class="">Quantity</label>
                  <div class="my-2 flex max-w-48">
                    <button
                      x-on:click="document.querySelector('#Quantity-{{section.id}}').stepDown()"
                      type="button"
                      class="w-full bg-gray-900 text-white hover:bg-gray-700 rounded-sm"
                    >
                      -
                    </button>
                    <input
                      type="number"
                      id="Quantity-{{section.id}}"
                      name="quantity"
                      value="1"
                      min="1"
                      class="w-full border py-3 px-3 text-center"
                    >
                    <button
                      x-on:click="document.querySelector('#Quantity-{{section.id}}').stepUp()"
                      type="button"
                      class="w-full bg-gray-900 text-white hover:bg-gray-700 rounded-sm"
                    >
                      +
                    </button>
                  </div>
                </div>
              {% when 'description' %}
                <div class="my-3">
                  <div class="text-gray-700">
                    {{ product.description }}
                  </div>
                </div>
              {% when 'checkout_buttons' %}
                <div class="my-3">
                  <button
                    type="submit"
                    class="w-full bg-gray-900 text-white hover:bg-gray-700 rounded-sm py-4 px-6 my-2"
                    {% if selected_variant.available == false %}
                      disabled
                    {% endif %}
                  >
                    {% if selected_variant.available == false %}
                      Sold out
                    {% else %}
                      Add to cart
                    {% endif %}
                  </button>
                </div>
              {% else %}

            {% endcase %}
          {% endfor %}
        {% endform %}
      </div>
    </div>
  </div>
  <style>
    .media model-viewer,
    .media > * {
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  </style>
  <div id="productModelModal">
    <div x-show="productModalOpen" class="w-full h-full z-50 items-center fixed inset-0">
      <div class="relative w-full h-full bg-white">
        <div class="relative">
          <div class="flex justify-between items-start p-5 border-b">
            <h2 class="text-xl font-bold text-gray-700">3D Model Preview</h2>
            <button
              x-on:click="productModalOpen = false"
              class="text-gray-400 bg-transparent hover:text-gray-700 rounded text-sm p-2 ml-auto inline-flex items-center"
            >
              {% render 'icon-close' %}
            </button>
          </div>
          <div id="body" class="media block relative" style="padding-top: min(calc(100vh - 5rem), 100%);"></div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.url = this.getAttribute('data-url');
      this.section = this.getAttribute('data-section');
      this.addEventListener('change', this.onVariantChange);
    }

    onVariantChange(event) {
      console.log(event.target.value);
      const formData = new FormData();
      formData.append('section_id', this.section);
      formData.append('id', event.target.value);

      this.getSelectedOptions();
      this.getSelectedVariant();

      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
        this.updateSelectedField();
      }
    }

    updateSelectedField() {
      const fields = this.querySelectorAll('input[type="radio"]');
      const selectedFields = this.querySelectorAll('input[type="radio"]:checked');

      fields.forEach((field) => {
        field.parentElement.classList.remove('font-bold');
      });
      selectedFields.forEach((field) => {
        field.parentElement.classList.add('font-bold');
      });
    }

    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('select, input[type="radio"]:checked'), (select) => select.value);
    }
    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options
          .map((option, index) => {
            return this.options[index] === option;
          })
          .includes(false);
        if (findings) {
          return variant;
        }
      });
    }

    updateURL() {
      if (!this.currentVariant) {
        return;
      }
      window.history.replaceState({}, '', `${this.url}?variant=${this.currentVariant.id}`);
    }

    updateFormID() {
      const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${this.url}?variant=${this.currentVariant.id}&section_id=${this.section}`)
        .then((response) => response.text())
        .then((responseText) => {
          const parser = new DOMParser();
          const html = parser.parseFromString(responseText, 'text/html');
          const id = `price-${this.section}`;
          const oldPrice = document.getElementById(id);
          const newPrice = html.getElementById(id);

          if (oldPrice && newPrice) {
            oldPrice.innerHTML = newPrice.innerHTML;
          }
        });
    }
  }

  customElements.define('variant-selector', VariantSelector);
</script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    try {
      const swiper = new Swiper('.swiper', {
        direction: 'horizontal',
        pagination: {
          el: '.swiper-pagination',
        },
        navigation: {
          prevEl: '.swiper-button-prev',
          nextEl: '.swiper-button-next',
        },
      });
    } catch (error) {
      throw new Error('Swiper is not defined', error);
    }
  });
</script>

{% schema %}
{
  "name": "Product",
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant selector",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout_buttons",
      "name": "Checkout buttons",
      "limit": 1
    }
  ]
}
{% endschema %}
